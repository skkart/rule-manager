{"version":3,"sources":["reducers/index.js","reducers/rulesReducer.js","actions/types.js","reducers/formReducer.js","config/index.js","actions/index.js","helpers/RuleConfiguration.js","components/Dashboard.js","components/AppHeader.js","helpers/validators.js","components/Criteria.js","components/CriteriaJoin.js","components/RuleConfig.js","App.js","serviceWorker.js","index.js"],"names":["combineReducers","rules","state","action","type","payload","formRule","fetchRuleList","dispatch","a","axios","get","config","res","data","console","log","setRule","ruleObj","operators","value","label","criteriaToString","ctr","join","key","opr","connect","initRuleList","deleteRule","ruleId","success","delete","store","addNotification","title","message","insert","container","animationIn","animationOut","dismiss","duration","pauseOnHover","props","useState","loading","setLoading","length","useEffect","deleteRuleAction","rl","i","id","className","role","scope","style","width","map","name","conditions","onClick","history","push","editRuleAction","icon","faEdit","aria-hidden","faTrash","withRouter","addRule","urlPath","useLocation","pathname","to","faCogs","indexOf","faPlus","isRequired","Criteria","rule","form","setForm","formError","setFormError","validateError","error","val","test","attributeValidator","prevState","updateCriteria","e","target","newFrom","onChange","index","prop","optr","CriteriaJoin","setJoin","editRule","updatedRule","put","post","criteriaList","setCriteriaList","ruleName","setRuleName","preview","setPreview","updatedMdl","updateCriteriaJoin","joinVal","onRuleSubmit","aria-describedby","disabled","document","getElementsByClassName","newArr","toString","this","App","exact","path","component","Dashboard","RuleConfig","Boolean","window","location","hostname","match","createStore","reducers","applyMiddleware","reduxThunk","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.6254348b.chunk.js","sourcesContent":["import {combineReducers} from 'redux'\nimport ruleReducer from './rulesReducer'\nimport formReducer from './formReducer'\n\nexport default combineReducers({\n  rules: ruleReducer, // rules list\n  formRule: formReducer // Add/Edit rule\n})","import {FETCH_RULES} from \"../actions/types\";\n\n// Reducer for handling ruleList\nexport default  function (state = null, action) {\n  switch (action.type) {\n    case FETCH_RULES:\n      return action.payload || [];\n    default:\n      return state;\n  }\n}","export const SET_RULE = 'set_rule';\nexport const FETCH_RULES = 'fetch_rules';","import {SET_RULE} from \"../actions/types\";\n\n// Reducer for handling formRule\nexport default  function (state = null, action) {\n  switch (action.type) {\n    case SET_RULE:\n      return action.payload || {};\n    default:\n      return null;\n  }\n}","export default {\n  // dummyApi: 'http://www.mocky.io/v2/5ebe9d123100009798c5d475',\n  dummyApi: 'https://www.mocky.io/v2/5ebeac3c310000af05c5d4df',\n  ruleApi: '/api/rule' // Actual REST API to implement in Backend to address /list, POST, PUT, DELETE\n}","import axios from 'axios'\nimport {FETCH_RULES, SET_RULE} from \"./types\"\nimport config from '../config'\nimport {store} from 'react-notifications-component'\n\n// Common Action to be used by Many dispatch actions like fetchRuleList,\nconst fetchRuleList = async (dispatch) => {\n  try {\n    const res = await axios.get(config.dummyApi)\n    if (res.data && res.data.rules) {\n      dispatch({type: FETCH_RULES, payload: res.data.rules})\n    }\n  } catch (e) {\n    console.log('Error', e)\n  }\n}\n\n//Action to Get list of Rules\nexport const initRuleList = () => fetchRuleList\n\n// Action to Set Rule on Add or Edit\nexport const setRule = (ruleObj) => async dispatch => {\n  dispatch({ type: SET_RULE, payload: ruleObj })\n}\n\n// Action to delete rule\n// API --> DELETE /api/rule/[ruleID]\nexport const deleteRule = (ruleId) => async dispatch => {\n  let success = true\n  try {\n    await axios.delete(`${config.ruleApi}/${ruleId}`)\n    // After delete reload the RuleList\n    await fetchRuleList(dispatch)\n  } catch (e) {\n    console.log('Error', e)\n    success = false\n  } finally {\n    store.addNotification({\n      title: success ? 'Success' : 'Error: Try Again later',\n      message: success ? 'Rule Deleted' : 'Delete Request failed',\n      type: success ? 'success' :'danger',\n      insert: 'top',\n      container: 'top-center',\n      animationIn: ['animated', 'fadeIn', 'jackInTheBox'],\n      animationOut: ['animated', 'fadeOut'],\n      dismiss: {\n        duration: 3000,\n        pauseOnHover: true\n      }\n    })\n  }\n}\n\n\n// Action to Edit rule\n// API --> PUT /api/rule/[ruleID]\nexport const editRule = (updatedRule) => async dispatch => {\n  let success = true\n  try {\n    await axios.put(`${config.ruleApi}/${updatedRule.id}`, updatedRule)\n    // After Edit reload the RuleList\n    await fetchRuleList(dispatch)\n  } catch (e) {\n    console.log('Error', e)\n    success = false\n  } finally {\n    store.addNotification({\n      title: success ? 'Success' : 'Error: Try Again later',\n      message: success ? 'Rule Updated' : 'Update Request failed',\n      type: success ? 'success' :'danger',\n      insert: 'top',\n      container: 'top-center',\n      animationIn: ['animated', 'fadeIn', 'jackInTheBox'],\n      animationOut: ['animated', 'fadeOut'],\n      dismiss: {\n        duration: 3000,\n        pauseOnHover: true\n      }\n    })\n  }\n}\n\n\n// Action to Add rule\n// API --> POST /api/rule\nexport const addRule = (addRule) => async dispatch => {\n  let success = true\n  try {\n    await axios.post(config.ruleApi, addRule)\n    // After Post reload the RuleList\n    await fetchRuleList(dispatch)\n  } catch (e) {\n    success = false\n    console.log('Error', e)\n  } finally {\n    store.addNotification({\n      title: success ? 'Success' : 'Error: Try Again later',\n      message: success ? 'Rule Added' : 'Add Request failed',\n      type: success ? 'success' :'danger',\n      insert: 'top',\n      container: 'top-center',\n      animationIn: ['animated', 'fadeIn', 'jackInTheBox'],\n      animationOut: ['animated', 'fadeOut'],\n      dismiss: {\n        duration: 3000,\n        pauseOnHover: true\n      }\n    })\n  }\n}","\n//List of all Allowed Operators\nexport const operators = [\n  {\n    value: '>',\n    label: '>'\n  },\n  {\n    value: '<',\n    label: '<'\n  },\n  {\n    value: '>=',\n    label: '>='\n  },\n  {\n    value: '<=',\n    label: '<='\n  },\n  {\n    value: '=',\n    label: '='\n  },\n  {\n    value: '!=',\n    label: '!='\n  },\n  {\n    value: 'in',\n    label: 'in'\n  },\n  {\n    value: 'not in',\n    label: 'not in'\n  },\n  {\n    value: 'has',\n    label: 'has'\n  }\n]\n\n\n// Show Criterias in a well format\nexport const criteriaToString = (ctr) => {\n  if (ctr.type === 'CriteriaJoin') {\n    return ctr.join ? ` ${ctr.join} ` : ''\n  }\n  return ctr.key ? `( ${ctr.key} ${ctr.opr} ${ctr.value} )` : ''\n}","import React, {useEffect, useState} from 'react'\nimport {connect} from 'react-redux'\nimport {initRuleList, deleteRule, setRule} from '../actions'\nimport {criteriaToString} from \"../helpers/RuleConfiguration\"\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome'\nimport {faTrash, faEdit} from '@fortawesome/free-solid-svg-icons'\n\n\nfunction Dashboard(props) {\n  const [loading, setLoading] = useState(false)\n\n  const initRuleList = async () => {\n    try {\n      setLoading(true)\n      if (!props.rules || !props.rules.length) {\n        await props.initRuleList()\n      }\n    } catch (e) {\n      console.log('Failed to load user chats', e)\n    } finally {\n      setLoading(false)\n    }\n  }\n\n\n  // On Mount, Call the Rule List to fetch all Rules from BE\n  useEffect(() => {\n    initRuleList()\n  }, [])\n\n  // Show Condtions in user readable format\n  const renderEquation = (cond) => (\n    cond.map((ctr, i) => (<span key={i} className=\"m-1\">{criteriaToString(ctr)}</span>))\n  )\n\n  const editRuleAction = (rl, i) => {\n    // Set the CLicked rule to formRule and open RuleConfig\n    props.setRule(rl)\n    props.history.push('/edit')\n  }\n\n  const deleteRuleAction = async (rl, i) => {\n    // Delete the Rule & Reloads RuleList\n    await props.deleteRule(rl.id)\n  }\n\n  // Render Table view for list of obtained Rules\n  const loadRuleTable = () => (\n    <div className=\"table-responsive-md mt-4\">\n      <table className=\"table table-info table-hover table-bordered\">\n        <thead className=\"thead-dark\">\n        <tr>\n          <th scope=\"col\">#</th>\n          <th scope=\"col\">Rule Name</th>\n          <th scope=\"col\">Conditions</th>\n          <th scope=\"col\" style={{width: '80px'}}>Action</th>\n        </tr>\n        </thead>\n        <tbody>\n        {props.rules && props.rules.map((rl, i) => (\n          <tr key={rl.id}>\n            <th scope=\"row\">{i}</th>\n            <td>{rl.name}</td>\n            <td>{renderEquation(rl.conditions)}</td>\n            <td>\n              <span className=\"m-1 mr-2 pointer\" onClick={() => editRuleAction(rl, i)}><FontAwesomeIcon icon={faEdit}\n                                                                                                  aria-hidden=\"true\"/></span>\n              <span className=\"m-1 pointer\" onClick={() => deleteRuleAction(rl, i)}><FontAwesomeIcon icon={faTrash}\n                                                                                               aria-hidden=\"true\"/></span>\n            </td>\n          </tr>\n        ))}\n        </tbody>\n      </table>\n    </div>\n  )\n\n  return (\n    <div className=\"dashbord\">\n      {\n        loading ? (\n          <div className=\"m-5 text-center\">\n            <div className=\"spinner-border text-primary text-center\" role=\"status\">\n              <span className=\"sr-only\">Loading...</span>\n            </div>\n          </div>\n        ) : (\n          loadRuleTable()\n        )\n      }\n    </div>\n  )\n}\n\nconst mapStateToProps = state => ({\n  rules: state.rules\n})\n\nexport default connect(\n  mapStateToProps,\n  {initRuleList, deleteRule, setRule})(Dashboard)","import React, {useEffect} from 'react'\nimport {connect} from 'react-redux'\nimport {useLocation, Link, withRouter} from 'react-router-dom'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport {faPlus, faCogs} from '@fortawesome/free-solid-svg-icons'\nimport {setRule} from \"../actions\"\n\n\nfunction AppHeader(props) {\n\n  // On Mount of App Header, Load Dashboard\n  useEffect(() => {\n    props.history.push('/dashboard')\n  }, [])\n\n  const addRule = async () => {\n    // FLush the stale state of formRule and pass empty rule\n    await props.setRule({\n      name: '',\n      conditions: []\n    })\n    props.history.push('/add')\n  }\n\n  // In case of ADD flow, Hide Add button on its route\n  const location = useLocation()\n  const urlPath = location.pathname\n  return (\n    <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n      <Link className=\"navbar-brand\" to=\"/dashboard\"> <FontAwesomeIcon icon={faCogs} aria-hidden=\"true\"/> Rule Manager</Link>\n      {\n        urlPath.indexOf('/add') === -1 &&\n        <button type=\"button\"\n                className=\"btn btn-success float-right add-button\"\n                onClick={addRule}>\n          <FontAwesomeIcon icon={faPlus} aria-hidden=\"true\"/>\n        </button>\n      }\n    </nav>\n  )\n}\n\nexport default connect(\n  null,\n  {setRule})(withRouter(AppHeader))","export const isRequired = (value) => {\n  if (!value) {\n    return 'This Field is required!'\n  }\n  return ''\n}\n\n// This validator must take only words\nexport const attributeValidator = (value) => {\n  let val = isRequired(value)\n  if (!val) {\n    let re = /^[a-zA-Z ]+$/\n    if (!re.test(value)) {\n      val = 'Should be simple word!'\n    }\n  }\n  return val\n}","import React, {useState, useEffect} from 'react'\nimport {operators} from \"../helpers/RuleConfiguration\";\nimport {attributeValidator, isRequired} from \"../helpers/validators\";\n\nexport default function Criteria(props) {\n  // Create Form Obj to Watch on every user input\n  const [form, setForm] = useState({\n    key: props.rule.key,\n    value: props.rule.value,\n    opr: props.rule.opr,\n  })\n\n  // Create Error Obj to validate on every user input\n  const [formError, setFormError] = useState({\n    key: '',\n    value: '',\n    opr: ''\n  })\n\n  const validateError = (name, value) => {\n    let error = ''\n    switch (name) {\n      case 'key':\n        error = attributeValidator(value)\n        break\n      default:\n        error = isRequired(value)\n        break\n    }\n\n    setFormError(prevState => ({\n      ...prevState,\n      [name]: error\n    }))\n\n    return error\n  }\n\n  const updateCriteria = e => {\n    let { name, value } = e.target\n    const newFrom = {\n      ...form,\n      [name]: value\n    }\n    setForm(newFrom)\n    validateError(name, value)\n    props.onChange(props.index, newFrom)\n  }\n\n  useEffect(() => {\n    // On mount of Every Criteria, Show validation upfront to user\n    for (const prop in form) {\n      validateError(prop, form[prop])\n    }\n  }, [])\n\n\n  return (<div className=\"form-row rule-row\">\n    <div className=\"form-group col-md-4\">\n      <label>Config Attribute</label>\n      <input\n        type=\"text\"\n        className=\"form-control\"\n        name=\"key\"\n        value={form.key}\n        onChange={updateCriteria}\n      />\n      {formError.key &&\n      <span className=\"error\">{formError.key}</span>}\n    </div>\n    <div className=\"form-group col-md-3\">\n      <label>Operation</label>\n      <select className=\"form-control\"\n              name=\"opr\"\n              value={form.opr}\n              onChange={updateCriteria}\n      >\n        <option value=\"\">Choose...</option>\n        {\n          operators.map(optr => (\n          <option key={optr.value}\n          value={optr.value}\n          label={optr.label} >\n          </option>))\n        }\n      </select>\n      {formError.opr &&\n      <span className=\"error\">{formError.opr}</span>}\n    </div>\n    <div className=\"form-group col-md-3\">\n      <label>Value</label>\n      <input\n        type=\"text\"\n        className=\"form-control\"\n        name=\"value\"\n        value={form.value}\n        onChange={updateCriteria}\n      />\n      {formError.value &&\n      <span className=\"error\">{formError.value}</span>}\n    </div>\n  </div>)\n}","import React, {useState} from 'react'\n\nexport default function CriteriaJoin(props) {\n  const [join, setJoin] = useState(props.join)\n\n  const onJoinChange = (e) => {\n    setJoin(e.target.value)\n    props.onChange(props.index, e.target.value)\n  }\n\n  //In between every criteria we must add join operation (AND , OR) to pipe the criterias\n  return (\n    <div className=\"text-center m-5\">\n      <div className=\"input-group ml-4\">\n        <div className=\"input-group-prepend\">\n          <label className=\"input-group-text\">Action</label>\n        </div>\n        <select className=\"custom-select\" value={join} onChange={onJoinChange}>\n          <option value=\"\">Choose ...</option>\n          <option value=\"and\">AND</option>\n          <option value=\"or\">OR</option>\n        </select>\n      </div>\n      {!join &&\n      <span className=\"error ml-5 float-left\">This condition is required!</span>}\n    </div>\n  )\n}","import React, {useEffect, useState} from 'react'\nimport {connect} from 'react-redux'\nimport Criteria from \"./Criteria\"\nimport CriteriaJoin from \"./CriteriaJoin\"\nimport { store } from 'react-notifications-component'\nimport {editRule, addRule} from '../actions'\nimport {criteriaToString} from \"../helpers/RuleConfiguration\"\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport {faPlus} from '@fortawesome/free-solid-svg-icons'\n\n\n/*\n*\n* Every Rule has a name\n* &\n* List of criterias to form a conditions\n*\n* In between every criteria we can see join operation (AND , OR) to pipe the criterias\n*\n*/\nfunction RuleConfig(props) {\n  const [criteriaList, setCriteriaList] = useState([])\n  const [errorArr, setErrorArr] = useState([])\n  const [ruleName, setRuleName] = useState('')\n  const [preview, setPreview] = useState(false)\n\n\n  // On Mount, Call the Rule List to fetch all Rules from BE\n  useEffect(() => {\n    setRuleName(props.formRule && props.formRule.name)\n    setCriteriaList(props.formRule && props.formRule.conditions)\n  }, [])\n\n  const addCriteria = () => {\n    // Before ADD New Criteria, Validate for no errors in form\n    if (document.getElementsByClassName(\"error\").length) {\n      store.addNotification({\n        message: 'Please fix all the Error before new Criteria!!!',\n        type: 'warning',\n        insert: 'top',\n        container: 'top-center',\n        animationIn: ['animated', 'fadeIn', 'jackInTheBox'],\n        animationOut: ['animated', 'fadeOut'],\n        dismiss: {\n          duration: 3000,\n          pauseOnHover: true\n        }\n      })\n      return\n    }\n\n\n    let newArr = []\n    // If Criterias exists, Add JOIN operation & Criteria together\n    if (criteriaList.length > 0) {\n      newArr.push({\n        type: 'CriteriaJoin', toString() {\n          return this.join ? ` ${this.join} ` : ''\n        }\n      })\n    }\n    newArr.push({\n      type: 'Criteria', key: '', value: '', opr: ''\n    })\n    setCriteriaList([...criteriaList, ...newArr])\n  }\n\n  const updateCriteria = (index, updatedMdl) => {\n    criteriaList[index] = {...criteriaList[index], ...updatedMdl}\n  }\n\n  const updateCriteriaJoin = (index, joinVal) => {\n    criteriaList[index].join = joinVal\n  }\n\n  const clickPreview = () => {\n    if (document.getElementsByClassName(\"error\").length) {\n      // Show error\n      store.addNotification({\n        message: 'Please fix all the Error to Preview!!!',\n        type: 'danger',\n        insert: 'top',\n        container: 'top-center',\n        animationIn: ['animated', 'fadeIn', 'jackInTheBox'],\n        animationOut: ['animated', 'fadeOut'],\n        dismiss: {\n          duration: 3000,\n          pauseOnHover: true\n        }\n      })\n      return\n    }\n\n    if (!criteriaList.length) {\n      // Atleast one criteria must exist\n      store.addNotification({\n        message: 'Atleast one criteria must exist to Preview!!!',\n        type: 'danger',\n        insert: 'top',\n        container: 'top-center',\n        animationIn: ['animated', 'fadeIn', 'jackInTheBox'],\n        animationOut: ['animated', 'fadeOut'],\n        dismiss: {\n          duration: 3000,\n          pauseOnHover: true\n        }\n      })\n      return\n    }\n    setPreview(true)\n  }\n\n  const onRuleSubmit = async () => {\n    const ruleObj = {\n      id: props.formRule.id,\n      name: ruleName,\n      conditions: criteriaList\n    }\n    if (props.formRule.id) {\n      // Edit Flow\n      // Edit the Rule & Reloads RuleList\n      await props.editRule(ruleObj)\n    } else {\n      // Add Flow\n      // Add the Rule & Reloads RuleList\n      await props.addRule(ruleObj)\n    }\n    // Redirect to dashboard\n    props.history.push('/dashboard')\n  }\n\n  return (\n    <div className=\"card text-center\">\n      <div className=\"card-header\">\n        Rule ({props.formRule && props.formRule.id ? 'Edit' : 'Add'})\n      </div>\n      <div className=\"card-body\">\n        <div className=\"form-group\">\n          <div className=\"input-group col-md-4 p-0\">\n            <div className=\"input-group-prepend\">\n              <span className=\"input-group-text\">Name</span>\n            </div>\n            <input type=\"text\" className=\"form-control\"\n                   aria-describedby=\"inputGroupPrepend\"\n                   disabled={!!preview}\n                   value={ruleName}\n                   onChange={(e) => setRuleName(e.target.value)}\n            />\n          </div>\n          {!ruleName &&\n          <span className=\"error ml-3 float-left\">This field is required!</span>}\n        </div>\n        <div className=\"ruleConfig mt-5 mb-5\">\n          {\n            !preview ? (criteriaList.map((ctr, i) => (\n                ctr.type === 'Criteria' ?\n                  <Criteria rule={ctr} index={i} key={i} onChange={updateCriteria}/> :\n                  <CriteriaJoin join={ctr.join} index={i} key={i} onChange={updateCriteriaJoin}/>\n              )))\n              :\n              (<div className=\"card bg-light mb-3\">\n                <div className=\"card-header\">Rule Conditions</div>\n                <div className=\"card-body\">\n                  <p className=\"card-text\">\n                    {criteriaList.map((ctr, i) => (<span key={i} className=\"m-1\">{criteriaToString(ctr)}</span>))}\n                  </p>\n                </div>\n              </div>)\n          }\n        </div>\n        {!preview && <a className=\"btn btn-success\" onClick={addCriteria}><FontAwesomeIcon icon={faPlus} aria-hidden=\"true\"/> Criteria</a>}\n      </div>\n      <div className=\"card-footer text-muted\">\n        {\n          !preview ?\n            [<button key={1} type=\"button\" className=\"btn btn-danger float-left\" onClick={() => props.history.push('/dashboard')}>Cancel</button>,\n              <button key={2} type=\"button\" className=\"btn btn-primary float-right\" onClick={clickPreview}>Preview</button>]\n            :\n            [<button key={3} type=\"button\" className=\"btn btn-danger float-left\" onClick={() => setPreview(false)}>Back</button>,\n              <button key={4} type=\"button\" className=\"btn btn-success float-right\" onClick={onRuleSubmit}>Submit</button>]\n        }\n      </div>\n    </div>\n  )\n}\n\nconst mapStateToProps = state => ({\n  formRule: state.formRule\n})\n\nexport default connect(\n  mapStateToProps,\n  {editRule, addRule})(RuleConfig)","import React from 'react';\nimport {BrowserRouter, Route} from 'react-router-dom';\n// Load Bootstrap for responsive UI\nimport 'bootstrap/dist/js/bootstrap';\n//Load notification for showing notification on error/success\nimport ReactNotification from 'react-notifications-component';\n\n// Load Ext vendor CSS\nimport 'bootstrap/dist/css/bootstrap.css';\nimport 'react-notifications-component/dist/theme.css'\n\nimport './App.css';\n\n// This is the Root page of Our APP\nimport Dashboard from \"./components/Dashboard\";\nimport AppHeader from \"./components/AppHeader\";\n\n// For ADD/EDIT Rules\nimport RuleConfig from \"./components/RuleConfig\";\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <div className=\"container\">\n        <ReactNotification />\n        <AppHeader/>\n        <Route exact={true} path=\"/\" component={Dashboard}/>\n        <Route exact path=\"/dashboard\" component={Dashboard}/>\n        <Route exact path=\"/add\" component={RuleConfig}/>\n        <Route exact path=\"/edit\" component={RuleConfig}/>\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { BrowserRouter } from 'react-router-dom'\nimport { Provider } from 'react-redux' // provider is a component that makes the store accessinle to all cmpt in app\nimport { createStore, applyMiddleware } from 'redux'\nimport reduxThunk from 'redux-thunk'\nimport reducers from './reducers'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nconst store = createStore(reducers, {}, applyMiddleware(reduxThunk))\n\nconst initReactApp = () => {\n  ReactDOM.render(\n    <Provider store={store}>\n      <BrowserRouter>\n        <App />\n      </BrowserRouter>\n    </Provider>,\n    document.getElementById('root'),\n  )\n}\n\n// Load\ninitReactApp()\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}